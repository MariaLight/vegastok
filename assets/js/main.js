"use strict";var e=20234,t=window.innerWidth,r=void 0;if(document.getElementById("odometer")){r=t>=960?document.getElementById("odometer"):document.getElementById("odometer-2");var n=new Odometer({el:r,value:e,format:"( ddd).dd",animation:"up"});n.render(),setInterval((function(){n.update(e++)}),5e3)}if(document.querySelector(".swiper__news"))new Swiper(".swiper__news",{direction:"horizontal",slidesPerView:2,spaceBetween:20,freeMode:!0,mousewheel:{forceToAxis:!0},navigation:{nextEl:".news .swiper-button-next",prevEl:".news .swiper-button-prev"},breakpoints:{320:{slidesPerView:1},960:{slidesPerView:2}}});if(document.querySelector(".swiper__popular"))new Swiper(".swiper__popular",{direction:"horizontal",slidesPerView:4,spaceBetween:20,freeMode:!0,mousewheel:{forceToAxis:!0},navigation:{nextEl:".popular .swiper-button-next",prevEl:".popular .swiper-button-prev"},breakpoints:{320:{slidesPerView:1},640:{slidesPerView:2},960:{slidesPerView:4}}});document.addEventListener("DOMContentLoaded",(function(){var e=window.innerWidth;document.querySelectorAll(".header__item").forEach((function(t){var r=t.querySelector(".header__submenu");e>=960?(t.addEventListener("mouseenter",(function(){r.classList.add("header__submenu--active")})),t.addEventListener("mouseleave",(function(){r.classList.remove("header__submenu--active")})),r.addEventListener("mouseenter",(function(){r.classList.add("header__submenu--active")}))):t.addEventListener("click",(function(e){e.preventDefault(),r.classList.contains("header__submenu--active")?(r.classList.remove("header__submenu--active"),t.querySelector(".header__link").classList.remove("header__link--active")):(r.classList.add("header__submenu--active"),t.querySelector(".header__link").classList.add("header__link--active"))}))}));var t=document.querySelector(".burger"),r=(t.querySelector("#open"),t.querySelector("#close"),document.querySelector(".header__nav"));t.addEventListener("click",(function(){r.classList.toggle("header__nav--active"),t.classList.toggle("burger--active")}));var n=document.getElementById("catalogFilter");n&&customSelect(n),document.querySelectorAll("[data-fancybox]")&&Fancybox.bind("[data-fancybox]",{})}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
